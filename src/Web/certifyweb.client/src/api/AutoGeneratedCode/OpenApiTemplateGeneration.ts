//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.2.0.0 (NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

/* tslint:disable */
/* eslint-disable */
// ReSharper disable InconsistentNaming

import { type AxiosRequestConfig, type AxiosInstance, type AxiosResponse } from 'axios'
import { service as defaultRequest} from '@/utils/request'

export class OpenApiGenerationClient {
    private httpRequest: <T = any>(config: AxiosRequestConfig) => Promise<AxiosResponse<T>>;
    private baseUrl: string;

    constructor(baseUrl?: string, requestInstance?: AxiosInstance) {
        this.httpRequest = requestInstance ?? defaultRequest;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "http://172.29.0.12:7005";
    }

    /**
     * @return OK
     */
    ApiAcmeCertificateGetCertificateAuthorities = async (axiosConfig?: AxiosRequestConfig) => {
        let url_ = "/api/AcmeCertificate/GetCertificateAuthorities";
        url_ = url_.replace(/[?&]$/, "");

        let config: AxiosRequestConfig = {
            ...axiosConfig,
            url: url_,
            baseURL: this.baseUrl,
            method: "GET",
            headers: {
                "Accept": "text/plain"
            }
        };

        const response = await this.httpRequest<CertificateAuthority[]>(config);
        return response?.data;

    }

    /**
     * @return OK
     */
    ApiAcmeCertificateGetChallengeProviders = async (axiosConfig?: AxiosRequestConfig) => {
        let url_ = "/api/AcmeCertificate/GetChallengeProviders";
        url_ = url_.replace(/[?&]$/, "");

        let config: AxiosRequestConfig = {
            ...axiosConfig,
            url: url_,
            baseURL: this.baseUrl,
            method: "GET",
            headers: {
                "Accept": "text/plain"
            }
        };

        const response = await this.httpRequest<ChallengeProviderDefinition[]>(config);
        return response?.data;

    }

    /**
     * @return OK
     */
    ApiAcmeCertificateRequestCertifica = async (axiosConfig?: AxiosRequestConfig) => {
        let url_ = "/api/AcmeCertificate/RequestCertifica";
        url_ = url_.replace(/[?&]$/, "");

        let config: AxiosRequestConfig = {
            ...axiosConfig,
            url: url_,
            baseURL: this.baseUrl,
            method: "POST",
            headers: {
            }
        };

        const response = await this.httpRequest<void>(config);

    }

    /**
     * @param acmeId (optional) 
     * @param directoryUri (optional) 
     * @param email (optional) 
     * @param eabKeyId (optional) 
     * @param eabHmacKey (optional) 
     * @param eabKeyAlg (optional) 
     * @param description (optional) 
     * @return OK
     */
    ApiAcmeInfoGetList = async ({ acmeId, directoryUri, email, eabKeyId, eabHmacKey, eabKeyAlg, description }: ApiAcmeInfoGetListRequestType, axiosConfig?: AxiosRequestConfig) => {
        let url_ = "/api/AcmeInfo/GetList?";
        if (acmeId === null)
            throw new Error("The parameter 'acmeId' cannot be null.");
        else if (acmeId !== undefined)
            url_ += "AcmeId=" + encodeURIComponent("" + acmeId) + "&";
        if (directoryUri === null)
            throw new Error("The parameter 'directoryUri' cannot be null.");
        else if (directoryUri !== undefined)
            url_ += "DirectoryUri=" + encodeURIComponent("" + directoryUri) + "&";
        if (email === null)
            throw new Error("The parameter 'email' cannot be null.");
        else if (email !== undefined)
            url_ += "Email=" + encodeURIComponent("" + email) + "&";
        if (eabKeyId === null)
            throw new Error("The parameter 'eabKeyId' cannot be null.");
        else if (eabKeyId !== undefined)
            url_ += "EabKeyId=" + encodeURIComponent("" + eabKeyId) + "&";
        if (eabHmacKey === null)
            throw new Error("The parameter 'eabHmacKey' cannot be null.");
        else if (eabHmacKey !== undefined)
            url_ += "EabHmacKey=" + encodeURIComponent("" + eabHmacKey) + "&";
        if (eabKeyAlg === null)
            throw new Error("The parameter 'eabKeyAlg' cannot be null.");
        else if (eabKeyAlg !== undefined)
            url_ += "EabKeyAlg=" + encodeURIComponent("" + eabKeyAlg) + "&";
        if (description === null)
            throw new Error("The parameter 'description' cannot be null.");
        else if (description !== undefined)
            url_ += "Description=" + encodeURIComponent("" + description) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let config: AxiosRequestConfig = {
            ...axiosConfig,
            url: url_,
            baseURL: this.baseUrl,
            method: "GET",
            headers: {
                "Accept": "text/plain"
            }
        };

        const response = await this.httpRequest<AcmeInfoDetailOutput[]>(config);
        return response?.data;

    }

    /**
     * @param acmeId (optional) 
     * @param directoryUri (optional) 
     * @param email (optional) 
     * @param eabKeyId (optional) 
     * @param eabHmacKey (optional) 
     * @param eabKeyAlg (optional) 
     * @param description (optional) 
     * @param pageNo (optional) 
     * @param pageSize (optional) 
     * @return OK
     */
    ApiAcmeInfoGetPage = async ({ acmeId, directoryUri, email, eabKeyId, eabHmacKey, eabKeyAlg, description, pageNo, pageSize }: ApiAcmeInfoGetPageRequestType, axiosConfig?: AxiosRequestConfig) => {
        let url_ = "/api/AcmeInfo/GetPage?";
        if (acmeId === null)
            throw new Error("The parameter 'acmeId' cannot be null.");
        else if (acmeId !== undefined)
            url_ += "AcmeId=" + encodeURIComponent("" + acmeId) + "&";
        if (directoryUri === null)
            throw new Error("The parameter 'directoryUri' cannot be null.");
        else if (directoryUri !== undefined)
            url_ += "DirectoryUri=" + encodeURIComponent("" + directoryUri) + "&";
        if (email === null)
            throw new Error("The parameter 'email' cannot be null.");
        else if (email !== undefined)
            url_ += "Email=" + encodeURIComponent("" + email) + "&";
        if (eabKeyId === null)
            throw new Error("The parameter 'eabKeyId' cannot be null.");
        else if (eabKeyId !== undefined)
            url_ += "EabKeyId=" + encodeURIComponent("" + eabKeyId) + "&";
        if (eabHmacKey === null)
            throw new Error("The parameter 'eabHmacKey' cannot be null.");
        else if (eabHmacKey !== undefined)
            url_ += "EabHmacKey=" + encodeURIComponent("" + eabHmacKey) + "&";
        if (eabKeyAlg === null)
            throw new Error("The parameter 'eabKeyAlg' cannot be null.");
        else if (eabKeyAlg !== undefined)
            url_ += "EabKeyAlg=" + encodeURIComponent("" + eabKeyAlg) + "&";
        if (description === null)
            throw new Error("The parameter 'description' cannot be null.");
        else if (description !== undefined)
            url_ += "Description=" + encodeURIComponent("" + description) + "&";
        if (pageNo === null)
            throw new Error("The parameter 'pageNo' cannot be null.");
        else if (pageNo !== undefined)
            url_ += "pageNo=" + encodeURIComponent("" + pageNo) + "&";
        if (pageSize === null)
            throw new Error("The parameter 'pageSize' cannot be null.");
        else if (pageSize !== undefined)
            url_ += "pageSize=" + encodeURIComponent("" + pageSize) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let config: AxiosRequestConfig = {
            ...axiosConfig,
            url: url_,
            baseURL: this.baseUrl,
            method: "GET",
            headers: {
                "Accept": "text/plain"
            }
        };

        const response = await this.httpRequest<SqlSugarPagedListOfAcmeInfoDetailOutput>(config);
        return response?.data;

    }

    /**
     * @return OK
     */
    ApiAcmeInfoCreate = async (body: AcmeInfoCreateInput, axiosConfig?: AxiosRequestConfig) => {
        let url_ = "/api/AcmeInfo/Create";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let config: AxiosRequestConfig = {
            ...axiosConfig,
            url: url_,
            baseURL: this.baseUrl,
            method: "POST",
            data: content_,
            headers: {
                "Content-Type": "application/json",
                "Accept": "text/plain"
            }
        };

        const response = await this.httpRequest<number>(config);
        return response?.data;

    }

    /**
     * @return OK
     */
    ApiAcmeInfoUpdate = async (body: AcmeInfoUpdateInput, axiosConfig?: AxiosRequestConfig) => {
        let url_ = "/api/AcmeInfo/Update";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let config: AxiosRequestConfig = {
            ...axiosConfig,
            url: url_,
            baseURL: this.baseUrl,
            method: "PUT",
            data: content_,
            headers: {
                "Content-Type": "application/json",
                "Accept": "text/plain"
            }
        };

        const response = await this.httpRequest<boolean>(config);
        return response?.data;

    }

    /**
     * @param id (optional) 
     * @return OK
     */
    ApiAcmeInfoDelete = async (id?: number | undefined, axiosConfig?: AxiosRequestConfig) => {
        let url_ = "/api/AcmeInfo/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let config: AxiosRequestConfig = {
            ...axiosConfig,
            url: url_,
            baseURL: this.baseUrl,
            method: "DELETE",
            headers: {
                "Accept": "text/plain"
            }
        };

        const response = await this.httpRequest<boolean>(config);
        return response?.data;

    }

    /**
     * @param ids (optional) 
     * @return OK
     */
    ApiAcmeInfoDeleteMany = async (ids?: number[] | undefined, axiosConfig?: AxiosRequestConfig) => {
        let url_ = "/api/AcmeInfo/DeleteMany?";
        if (ids === null)
            throw new Error("The parameter 'ids' cannot be null.");
        else if (ids !== undefined)
            ids && ids.forEach(item => { url_ += "ids=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let config: AxiosRequestConfig = {
            ...axiosConfig,
            url: url_,
            baseURL: this.baseUrl,
            method: "DELETE",
            headers: {
                "Accept": "text/plain"
            }
        };

        const response = await this.httpRequest<boolean>(config);
        return response?.data;

    }

    /**
     * @param id (optional) 
     * @return OK
     */
    ApiAcmeInfoGetDetail = async (id?: number | undefined, axiosConfig?: AxiosRequestConfig) => {
        let url_ = "/api/AcmeInfo/GetDetail?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let config: AxiosRequestConfig = {
            ...axiosConfig,
            url: url_,
            baseURL: this.baseUrl,
            method: "GET",
            headers: {
                "Accept": "text/plain"
            }
        };

        const response = await this.httpRequest<AcmeInfoDetailOutput>(config);
        return response?.data;

    }

    /**
     * @return OK
     */
    ApiAcmeInfoInitTable = async (axiosConfig?: AxiosRequestConfig) => {
        let url_ = "/api/AcmeInfo/InitTable";
        url_ = url_.replace(/[?&]$/, "");

        let config: AxiosRequestConfig = {
            ...axiosConfig,
            url: url_,
            baseURL: this.baseUrl,
            method: "PATCH",
            headers: {
            }
        };

        const response = await this.httpRequest<void>(config);

    }

    /**
     * @param providerType (optional) 
     * @param credentials (optional) 
     * @param parameters (optional) 
     * @param description (optional) 
     * @return OK
     */
    ApiDnsInfoGetList = async ({ providerType, credentials, parameters, description }: ApiDnsInfoGetListRequestType, axiosConfig?: AxiosRequestConfig) => {
        let url_ = "/api/DnsInfo/GetList?";
        if (providerType === null)
            throw new Error("The parameter 'providerType' cannot be null.");
        else if (providerType !== undefined)
            url_ += "ProviderType=" + encodeURIComponent("" + providerType) + "&";
        if (credentials === null)
            throw new Error("The parameter 'credentials' cannot be null.");
        else if (credentials !== undefined)
            url_ += "Credentials=" + encodeURIComponent("" + credentials) + "&";
        if (parameters === null)
            throw new Error("The parameter 'parameters' cannot be null.");
        else if (parameters !== undefined)
            url_ += "Parameters=" + encodeURIComponent("" + parameters) + "&";
        if (description === null)
            throw new Error("The parameter 'description' cannot be null.");
        else if (description !== undefined)
            url_ += "Description=" + encodeURIComponent("" + description) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let config: AxiosRequestConfig = {
            ...axiosConfig,
            url: url_,
            baseURL: this.baseUrl,
            method: "GET",
            headers: {
                "Accept": "text/plain"
            }
        };

        const response = await this.httpRequest<DnsInfoDetailOutput[]>(config);
        return response?.data;

    }

    /**
     * @param providerType (optional) 
     * @param credentials (optional) 
     * @param parameters (optional) 
     * @param description (optional) 
     * @param pageNo (optional) 
     * @param pageSize (optional) 
     * @return OK
     */
    ApiDnsInfoGetPage = async ({ providerType, credentials, parameters, description, pageNo, pageSize }: ApiDnsInfoGetPageRequestType, axiosConfig?: AxiosRequestConfig) => {
        let url_ = "/api/DnsInfo/GetPage?";
        if (providerType === null)
            throw new Error("The parameter 'providerType' cannot be null.");
        else if (providerType !== undefined)
            url_ += "ProviderType=" + encodeURIComponent("" + providerType) + "&";
        if (credentials === null)
            throw new Error("The parameter 'credentials' cannot be null.");
        else if (credentials !== undefined)
            url_ += "Credentials=" + encodeURIComponent("" + credentials) + "&";
        if (parameters === null)
            throw new Error("The parameter 'parameters' cannot be null.");
        else if (parameters !== undefined)
            url_ += "Parameters=" + encodeURIComponent("" + parameters) + "&";
        if (description === null)
            throw new Error("The parameter 'description' cannot be null.");
        else if (description !== undefined)
            url_ += "Description=" + encodeURIComponent("" + description) + "&";
        if (pageNo === null)
            throw new Error("The parameter 'pageNo' cannot be null.");
        else if (pageNo !== undefined)
            url_ += "pageNo=" + encodeURIComponent("" + pageNo) + "&";
        if (pageSize === null)
            throw new Error("The parameter 'pageSize' cannot be null.");
        else if (pageSize !== undefined)
            url_ += "pageSize=" + encodeURIComponent("" + pageSize) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let config: AxiosRequestConfig = {
            ...axiosConfig,
            url: url_,
            baseURL: this.baseUrl,
            method: "GET",
            headers: {
                "Accept": "text/plain"
            }
        };

        const response = await this.httpRequest<SqlSugarPagedListOfDnsInfoDetailOutput>(config);
        return response?.data;

    }

    /**
     * @return OK
     */
    ApiDnsInfoCreate = async (body: DnsInfoCreateInput, axiosConfig?: AxiosRequestConfig) => {
        let url_ = "/api/DnsInfo/Create";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let config: AxiosRequestConfig = {
            ...axiosConfig,
            url: url_,
            baseURL: this.baseUrl,
            method: "POST",
            data: content_,
            headers: {
                "Content-Type": "application/json",
                "Accept": "text/plain"
            }
        };

        const response = await this.httpRequest<number>(config);
        return response?.data;

    }

    /**
     * @return OK
     */
    ApiDnsInfoUpdate = async (body: DnsInfoUpdateInput, axiosConfig?: AxiosRequestConfig) => {
        let url_ = "/api/DnsInfo/Update";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(body);

        let config: AxiosRequestConfig = {
            ...axiosConfig,
            url: url_,
            baseURL: this.baseUrl,
            method: "PUT",
            data: content_,
            headers: {
                "Content-Type": "application/json",
                "Accept": "text/plain"
            }
        };

        const response = await this.httpRequest<boolean>(config);
        return response?.data;

    }

    /**
     * @param id (optional) 
     * @return OK
     */
    ApiDnsInfoDelete = async (id?: number | undefined, axiosConfig?: AxiosRequestConfig) => {
        let url_ = "/api/DnsInfo/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let config: AxiosRequestConfig = {
            ...axiosConfig,
            url: url_,
            baseURL: this.baseUrl,
            method: "DELETE",
            headers: {
                "Accept": "text/plain"
            }
        };

        const response = await this.httpRequest<boolean>(config);
        return response?.data;

    }

    /**
     * @param ids (optional) 
     * @return OK
     */
    ApiDnsInfoDeleteMany = async (ids?: number[] | undefined, axiosConfig?: AxiosRequestConfig) => {
        let url_ = "/api/DnsInfo/DeleteMany?";
        if (ids === null)
            throw new Error("The parameter 'ids' cannot be null.");
        else if (ids !== undefined)
            ids && ids.forEach(item => { url_ += "ids=" + encodeURIComponent("" + item) + "&"; });
        url_ = url_.replace(/[?&]$/, "");

        let config: AxiosRequestConfig = {
            ...axiosConfig,
            url: url_,
            baseURL: this.baseUrl,
            method: "DELETE",
            headers: {
                "Accept": "text/plain"
            }
        };

        const response = await this.httpRequest<boolean>(config);
        return response?.data;

    }

    /**
     * @param id (optional) 
     * @return OK
     */
    ApiDnsInfoGetDetail = async (id?: number | undefined, axiosConfig?: AxiosRequestConfig) => {
        let url_ = "/api/DnsInfo/GetDetail?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let config: AxiosRequestConfig = {
            ...axiosConfig,
            url: url_,
            baseURL: this.baseUrl,
            method: "GET",
            headers: {
                "Accept": "text/plain"
            }
        };

        const response = await this.httpRequest<DnsInfoDetailOutput>(config);
        return response?.data;

    }

    /**
     * @return OK
     */
    ApiDnsInfoInitTable = async (axiosConfig?: AxiosRequestConfig) => {
        let url_ = "/api/DnsInfo/InitTable";
        url_ = url_.replace(/[?&]$/, "");

        let config: AxiosRequestConfig = {
            ...axiosConfig,
            url: url_,
            baseURL: this.baseUrl,
            method: "PATCH",
            headers: {
            }
        };

        const response = await this.httpRequest<void>(config);

    }
}
//#region 请求对象

export type ApiAcmeInfoGetListRequestType = { acmeId?: string | undefined, directoryUri?: string | undefined, email?: string | undefined, eabKeyId?: string | undefined, eabHmacKey?: string | undefined, eabKeyAlg?: string | undefined, description?: string | undefined };

export type ApiAcmeInfoGetPageRequestType = { acmeId?: string | undefined, directoryUri?: string | undefined, email?: string | undefined, eabKeyId?: string | undefined, eabHmacKey?: string | undefined, eabKeyAlg?: string | undefined, description?: string | undefined, pageNo?: number | undefined, pageSize?: number | undefined };

export type ApiDnsInfoGetListRequestType = { providerType?: string | undefined, credentials?: { [key: string]: string; } | undefined, parameters?: { [key: string]: string; } | undefined, description?: string | undefined };

export type ApiDnsInfoGetPageRequestType = { providerType?: string | undefined, credentials?: { [key: string]: string; } | undefined, parameters?: { [key: string]: string; } | undefined, description?: string | undefined, pageNo?: number | undefined, pageSize?: number | undefined };
//#endregion

//#region AcmeInfoCreateInput 模型
export class AcmeInfoCreateInput {
    acmeId?: string;
    directoryUri?: string;
    email?: string;
    eabKeyId?: string | undefined;
    eabHmacKey?: string | undefined;
    eabKeyAlg?: string | undefined;
    description?: string | undefined;
    [key: string]: any;
}

export const AcmeInfoCreateInputColumns = {
    AcmeId: { dataIndex: 'acmeId', title: 'acmeId' },
    DirectoryUri: { dataIndex: 'directoryUri', title: 'directoryUri' },
    Email: { dataIndex: 'email', title: 'email' },
    EabKeyId: { dataIndex: 'eabKeyId', title: 'eabKeyId' },
    EabHmacKey: { dataIndex: 'eabHmacKey', title: 'eabHmacKey' },
    EabKeyAlg: { dataIndex: 'eabKeyAlg', title: 'eabKeyAlg' },
    Description: { dataIndex: 'description', title: 'description' },
};

/* 
<a-form-model ref="formRef" :model="formState.ruleForm" :labelCol="{ xs: { span: 24 }, sm: { span: 5 } }" :wrapperCol="{ xs: { span: 24 }, sm: { span: 15 } }">
    <a-form-model-item label="acmeId" prop="acmeId" :rules="{ required: true, message: `请输入 acmeId！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 acmeId" v-model="formState.ruleForm.acmeId" allowClear />
        <!-- 
        // 文本
        {{ acmeId ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 acmeId" v-model="formState.ruleForm.acmeId" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 acmeId" v-model="formState.ruleForm.acmeId" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 acmeId" v-model="formState.ruleForm.acmeId" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.acmeId">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.acmeId">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.acmeId" />
        // 评分
        <a-rate v-model="formState.ruleForm.acmeId" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="directoryUri" prop="directoryUri" :rules="{ required: true, message: `请输入 directoryUri！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 directoryUri" v-model="formState.ruleForm.directoryUri" allowClear />
        <!-- 
        // 文本
        {{ directoryUri ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 directoryUri" v-model="formState.ruleForm.directoryUri" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 directoryUri" v-model="formState.ruleForm.directoryUri" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 directoryUri" v-model="formState.ruleForm.directoryUri" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.directoryUri">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.directoryUri">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.directoryUri" />
        // 评分
        <a-rate v-model="formState.ruleForm.directoryUri" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="email" prop="email" :rules="{ required: true, message: `请输入 email！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 email" v-model="formState.ruleForm.email" allowClear />
        <!-- 
        // 文本
        {{ email ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 email" v-model="formState.ruleForm.email" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 email" v-model="formState.ruleForm.email" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 email" v-model="formState.ruleForm.email" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.email">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.email">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.email" />
        // 评分
        <a-rate v-model="formState.ruleForm.email" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="eabKeyId" prop="eabKeyId" :rules="{ required: true, message: `请输入 eabKeyId！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 eabKeyId" v-model="formState.ruleForm.eabKeyId" allowClear />
        <!-- 
        // 文本
        {{ eabKeyId ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 eabKeyId" v-model="formState.ruleForm.eabKeyId" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 eabKeyId" v-model="formState.ruleForm.eabKeyId" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 eabKeyId" v-model="formState.ruleForm.eabKeyId" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.eabKeyId">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.eabKeyId">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.eabKeyId" />
        // 评分
        <a-rate v-model="formState.ruleForm.eabKeyId" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="eabHmacKey" prop="eabHmacKey" :rules="{ required: true, message: `请输入 eabHmacKey！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 eabHmacKey" v-model="formState.ruleForm.eabHmacKey" allowClear />
        <!-- 
        // 文本
        {{ eabHmacKey ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 eabHmacKey" v-model="formState.ruleForm.eabHmacKey" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 eabHmacKey" v-model="formState.ruleForm.eabHmacKey" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 eabHmacKey" v-model="formState.ruleForm.eabHmacKey" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.eabHmacKey">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.eabHmacKey">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.eabHmacKey" />
        // 评分
        <a-rate v-model="formState.ruleForm.eabHmacKey" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="eabKeyAlg" prop="eabKeyAlg" :rules="{ required: true, message: `请输入 eabKeyAlg！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 eabKeyAlg" v-model="formState.ruleForm.eabKeyAlg" allowClear />
        <!-- 
        // 文本
        {{ eabKeyAlg ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 eabKeyAlg" v-model="formState.ruleForm.eabKeyAlg" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 eabKeyAlg" v-model="formState.ruleForm.eabKeyAlg" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 eabKeyAlg" v-model="formState.ruleForm.eabKeyAlg" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.eabKeyAlg">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.eabKeyAlg">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.eabKeyAlg" />
        // 评分
        <a-rate v-model="formState.ruleForm.eabKeyAlg" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="description" prop="description" :rules="{ required: true, message: `请输入 description！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 description" v-model="formState.ruleForm.description" allowClear />
        <!-- 
        // 文本
        {{ description ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 description" v-model="formState.ruleForm.description" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 description" v-model="formState.ruleForm.description" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 description" v-model="formState.ruleForm.description" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.description">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.description">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.description" />
        // 评分
        <a-rate v-model="formState.ruleForm.description" allow-half />
        -->
    </a-form-model-item>
</a-form-model>
*/

//#endregion

//#region AcmeInfoDetailOutput 模型
export class AcmeInfoDetailOutput {
    id?: number;
    acmeId?: string;
    directoryUri?: string;
    email?: string;
    eabKeyId?: string | undefined;
    eabHmacKey?: string | undefined;
    eabKeyAlg?: string | undefined;
    description?: string | undefined;
    [key: string]: any;
}

export const AcmeInfoDetailOutputColumns = {
    Id: { dataIndex: 'id', title: 'id' },
    AcmeId: { dataIndex: 'acmeId', title: 'acmeId' },
    DirectoryUri: { dataIndex: 'directoryUri', title: 'directoryUri' },
    Email: { dataIndex: 'email', title: 'email' },
    EabKeyId: { dataIndex: 'eabKeyId', title: 'eabKeyId' },
    EabHmacKey: { dataIndex: 'eabHmacKey', title: 'eabHmacKey' },
    EabKeyAlg: { dataIndex: 'eabKeyAlg', title: 'eabKeyAlg' },
    Description: { dataIndex: 'description', title: 'description' },
};

/* 
<a-form-model ref="formRef" :model="formState.ruleForm" :labelCol="{ xs: { span: 24 }, sm: { span: 5 } }" :wrapperCol="{ xs: { span: 24 }, sm: { span: 15 } }">
    <a-form-model-item label="id" prop="id" :rules="{ required: true, message: `请输入 id！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 id" v-model="formState.ruleForm.id" allowClear />
        <!-- 
        // 文本
        {{ id ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 id" v-model="formState.ruleForm.id" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 id" v-model="formState.ruleForm.id" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 id" v-model="formState.ruleForm.id" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.id">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.id">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.id" />
        // 评分
        <a-rate v-model="formState.ruleForm.id" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="acmeId" prop="acmeId" :rules="{ required: true, message: `请输入 acmeId！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 acmeId" v-model="formState.ruleForm.acmeId" allowClear />
        <!-- 
        // 文本
        {{ acmeId ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 acmeId" v-model="formState.ruleForm.acmeId" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 acmeId" v-model="formState.ruleForm.acmeId" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 acmeId" v-model="formState.ruleForm.acmeId" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.acmeId">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.acmeId">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.acmeId" />
        // 评分
        <a-rate v-model="formState.ruleForm.acmeId" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="directoryUri" prop="directoryUri" :rules="{ required: true, message: `请输入 directoryUri！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 directoryUri" v-model="formState.ruleForm.directoryUri" allowClear />
        <!-- 
        // 文本
        {{ directoryUri ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 directoryUri" v-model="formState.ruleForm.directoryUri" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 directoryUri" v-model="formState.ruleForm.directoryUri" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 directoryUri" v-model="formState.ruleForm.directoryUri" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.directoryUri">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.directoryUri">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.directoryUri" />
        // 评分
        <a-rate v-model="formState.ruleForm.directoryUri" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="email" prop="email" :rules="{ required: true, message: `请输入 email！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 email" v-model="formState.ruleForm.email" allowClear />
        <!-- 
        // 文本
        {{ email ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 email" v-model="formState.ruleForm.email" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 email" v-model="formState.ruleForm.email" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 email" v-model="formState.ruleForm.email" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.email">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.email">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.email" />
        // 评分
        <a-rate v-model="formState.ruleForm.email" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="eabKeyId" prop="eabKeyId" :rules="{ required: true, message: `请输入 eabKeyId！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 eabKeyId" v-model="formState.ruleForm.eabKeyId" allowClear />
        <!-- 
        // 文本
        {{ eabKeyId ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 eabKeyId" v-model="formState.ruleForm.eabKeyId" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 eabKeyId" v-model="formState.ruleForm.eabKeyId" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 eabKeyId" v-model="formState.ruleForm.eabKeyId" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.eabKeyId">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.eabKeyId">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.eabKeyId" />
        // 评分
        <a-rate v-model="formState.ruleForm.eabKeyId" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="eabHmacKey" prop="eabHmacKey" :rules="{ required: true, message: `请输入 eabHmacKey！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 eabHmacKey" v-model="formState.ruleForm.eabHmacKey" allowClear />
        <!-- 
        // 文本
        {{ eabHmacKey ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 eabHmacKey" v-model="formState.ruleForm.eabHmacKey" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 eabHmacKey" v-model="formState.ruleForm.eabHmacKey" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 eabHmacKey" v-model="formState.ruleForm.eabHmacKey" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.eabHmacKey">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.eabHmacKey">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.eabHmacKey" />
        // 评分
        <a-rate v-model="formState.ruleForm.eabHmacKey" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="eabKeyAlg" prop="eabKeyAlg" :rules="{ required: true, message: `请输入 eabKeyAlg！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 eabKeyAlg" v-model="formState.ruleForm.eabKeyAlg" allowClear />
        <!-- 
        // 文本
        {{ eabKeyAlg ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 eabKeyAlg" v-model="formState.ruleForm.eabKeyAlg" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 eabKeyAlg" v-model="formState.ruleForm.eabKeyAlg" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 eabKeyAlg" v-model="formState.ruleForm.eabKeyAlg" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.eabKeyAlg">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.eabKeyAlg">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.eabKeyAlg" />
        // 评分
        <a-rate v-model="formState.ruleForm.eabKeyAlg" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="description" prop="description" :rules="{ required: true, message: `请输入 description！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 description" v-model="formState.ruleForm.description" allowClear />
        <!-- 
        // 文本
        {{ description ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 description" v-model="formState.ruleForm.description" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 description" v-model="formState.ruleForm.description" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 description" v-model="formState.ruleForm.description" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.description">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.description">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.description" />
        // 评分
        <a-rate v-model="formState.ruleForm.description" allow-half />
        -->
    </a-form-model-item>
</a-form-model>
*/

//#endregion

//#region AcmeInfoUpdateInput 模型
export class AcmeInfoUpdateInput {
    id?: number;
    acmeId?: string;
    directoryUri?: string;
    email?: string;
    eabKeyId?: string | undefined;
    eabHmacKey?: string | undefined;
    eabKeyAlg?: string | undefined;
    description?: string | undefined;
    [key: string]: any;
}

export const AcmeInfoUpdateInputColumns = {
    Id: { dataIndex: 'id', title: 'id' },
    AcmeId: { dataIndex: 'acmeId', title: 'acmeId' },
    DirectoryUri: { dataIndex: 'directoryUri', title: 'directoryUri' },
    Email: { dataIndex: 'email', title: 'email' },
    EabKeyId: { dataIndex: 'eabKeyId', title: 'eabKeyId' },
    EabHmacKey: { dataIndex: 'eabHmacKey', title: 'eabHmacKey' },
    EabKeyAlg: { dataIndex: 'eabKeyAlg', title: 'eabKeyAlg' },
    Description: { dataIndex: 'description', title: 'description' },
};

/* 
<a-form-model ref="formRef" :model="formState.ruleForm" :labelCol="{ xs: { span: 24 }, sm: { span: 5 } }" :wrapperCol="{ xs: { span: 24 }, sm: { span: 15 } }">
    <a-form-model-item label="id" prop="id" :rules="{ required: true, message: `请输入 id！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 id" v-model="formState.ruleForm.id" allowClear />
        <!-- 
        // 文本
        {{ id ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 id" v-model="formState.ruleForm.id" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 id" v-model="formState.ruleForm.id" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 id" v-model="formState.ruleForm.id" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.id">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.id">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.id" />
        // 评分
        <a-rate v-model="formState.ruleForm.id" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="acmeId" prop="acmeId" :rules="{ required: true, message: `请输入 acmeId！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 acmeId" v-model="formState.ruleForm.acmeId" allowClear />
        <!-- 
        // 文本
        {{ acmeId ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 acmeId" v-model="formState.ruleForm.acmeId" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 acmeId" v-model="formState.ruleForm.acmeId" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 acmeId" v-model="formState.ruleForm.acmeId" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.acmeId">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.acmeId">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.acmeId" />
        // 评分
        <a-rate v-model="formState.ruleForm.acmeId" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="directoryUri" prop="directoryUri" :rules="{ required: true, message: `请输入 directoryUri！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 directoryUri" v-model="formState.ruleForm.directoryUri" allowClear />
        <!-- 
        // 文本
        {{ directoryUri ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 directoryUri" v-model="formState.ruleForm.directoryUri" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 directoryUri" v-model="formState.ruleForm.directoryUri" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 directoryUri" v-model="formState.ruleForm.directoryUri" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.directoryUri">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.directoryUri">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.directoryUri" />
        // 评分
        <a-rate v-model="formState.ruleForm.directoryUri" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="email" prop="email" :rules="{ required: true, message: `请输入 email！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 email" v-model="formState.ruleForm.email" allowClear />
        <!-- 
        // 文本
        {{ email ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 email" v-model="formState.ruleForm.email" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 email" v-model="formState.ruleForm.email" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 email" v-model="formState.ruleForm.email" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.email">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.email">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.email" />
        // 评分
        <a-rate v-model="formState.ruleForm.email" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="eabKeyId" prop="eabKeyId" :rules="{ required: true, message: `请输入 eabKeyId！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 eabKeyId" v-model="formState.ruleForm.eabKeyId" allowClear />
        <!-- 
        // 文本
        {{ eabKeyId ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 eabKeyId" v-model="formState.ruleForm.eabKeyId" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 eabKeyId" v-model="formState.ruleForm.eabKeyId" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 eabKeyId" v-model="formState.ruleForm.eabKeyId" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.eabKeyId">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.eabKeyId">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.eabKeyId" />
        // 评分
        <a-rate v-model="formState.ruleForm.eabKeyId" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="eabHmacKey" prop="eabHmacKey" :rules="{ required: true, message: `请输入 eabHmacKey！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 eabHmacKey" v-model="formState.ruleForm.eabHmacKey" allowClear />
        <!-- 
        // 文本
        {{ eabHmacKey ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 eabHmacKey" v-model="formState.ruleForm.eabHmacKey" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 eabHmacKey" v-model="formState.ruleForm.eabHmacKey" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 eabHmacKey" v-model="formState.ruleForm.eabHmacKey" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.eabHmacKey">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.eabHmacKey">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.eabHmacKey" />
        // 评分
        <a-rate v-model="formState.ruleForm.eabHmacKey" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="eabKeyAlg" prop="eabKeyAlg" :rules="{ required: true, message: `请输入 eabKeyAlg！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 eabKeyAlg" v-model="formState.ruleForm.eabKeyAlg" allowClear />
        <!-- 
        // 文本
        {{ eabKeyAlg ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 eabKeyAlg" v-model="formState.ruleForm.eabKeyAlg" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 eabKeyAlg" v-model="formState.ruleForm.eabKeyAlg" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 eabKeyAlg" v-model="formState.ruleForm.eabKeyAlg" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.eabKeyAlg">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.eabKeyAlg">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.eabKeyAlg" />
        // 评分
        <a-rate v-model="formState.ruleForm.eabKeyAlg" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="description" prop="description" :rules="{ required: true, message: `请输入 description！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 description" v-model="formState.ruleForm.description" allowClear />
        <!-- 
        // 文本
        {{ description ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 description" v-model="formState.ruleForm.description" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 description" v-model="formState.ruleForm.description" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 description" v-model="formState.ruleForm.description" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.description">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.description">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.description" />
        // 评分
        <a-rate v-model="formState.ruleForm.description" allow-half />
        -->
    </a-form-model-item>
</a-form-model>
*/

//#endregion

//#region CertificateAuthority 模型
export class CertificateAuthority {
    id?: string;
    apiType?: string;
    supportedFeatures?: string[];
    title?: string;
    description?: string;
    websiteUrl?: string;
    privacyPolicyUrl?: string;
    termsAndConditionsUrl?: string;
    statusUrl?: string;
    productionAPIEndpoint?: string;
    stagingAPIEndpoint?: string;
    defaultPreferredChain?: string;
    isEnabled?: boolean;
    isCustom?: boolean;
    sanLimit?: number;
    standardExpiryDays?: number;
    requiresEmailAddress?: boolean;
    requiresExternalAccountBinding?: boolean;
    allowUntrustedTls?: boolean;
    allowInternalHostnames?: boolean;
    supportsCachedValidations?: boolean;
    eabInstructions?: string;
    supportedKeyTypes?: string[];
    disabledIntermediates?: string[];
    trustedRoots?: { [key: string]: string; };
    intermediates?: { [key: string]: string; };
    [key: string]: any;
}

export const CertificateAuthorityColumns = {
    Id: { dataIndex: 'id', title: 'id' },
    ApiType: { dataIndex: 'apiType', title: 'apiType' },
    SupportedFeatures: { dataIndex: 'supportedFeatures', title: 'supportedFeatures' },
    Title: { dataIndex: 'title', title: 'title' },
    Description: { dataIndex: 'description', title: 'description' },
    WebsiteUrl: { dataIndex: 'websiteUrl', title: 'websiteUrl' },
    PrivacyPolicyUrl: { dataIndex: 'privacyPolicyUrl', title: 'privacyPolicyUrl' },
    TermsAndConditionsUrl: { dataIndex: 'termsAndConditionsUrl', title: 'termsAndConditionsUrl' },
    StatusUrl: { dataIndex: 'statusUrl', title: 'statusUrl' },
    ProductionAPIEndpoint: { dataIndex: 'productionAPIEndpoint', title: 'productionAPIEndpoint' },
    StagingAPIEndpoint: { dataIndex: 'stagingAPIEndpoint', title: 'stagingAPIEndpoint' },
    DefaultPreferredChain: { dataIndex: 'defaultPreferredChain', title: 'defaultPreferredChain' },
    IsEnabled: { dataIndex: 'isEnabled', title: 'isEnabled' },
    IsCustom: { dataIndex: 'isCustom', title: 'isCustom' },
    SanLimit: { dataIndex: 'sanLimit', title: 'sanLimit' },
    StandardExpiryDays: { dataIndex: 'standardExpiryDays', title: 'standardExpiryDays' },
    RequiresEmailAddress: { dataIndex: 'requiresEmailAddress', title: 'requiresEmailAddress' },
    RequiresExternalAccountBinding: { dataIndex: 'requiresExternalAccountBinding', title: 'requiresExternalAccountBinding' },
    AllowUntrustedTls: { dataIndex: 'allowUntrustedTls', title: 'allowUntrustedTls' },
    AllowInternalHostnames: { dataIndex: 'allowInternalHostnames', title: 'allowInternalHostnames' },
    SupportsCachedValidations: { dataIndex: 'supportsCachedValidations', title: 'supportsCachedValidations' },
    EabInstructions: { dataIndex: 'eabInstructions', title: 'eabInstructions' },
    SupportedKeyTypes: { dataIndex: 'supportedKeyTypes', title: 'supportedKeyTypes' },
    DisabledIntermediates: { dataIndex: 'disabledIntermediates', title: 'disabledIntermediates' },
    TrustedRoots: { dataIndex: 'trustedRoots', title: 'trustedRoots' },
    Intermediates: { dataIndex: 'intermediates', title: 'intermediates' },
};

/* 
<a-form-model ref="formRef" :model="formState.ruleForm" :labelCol="{ xs: { span: 24 }, sm: { span: 5 } }" :wrapperCol="{ xs: { span: 24 }, sm: { span: 15 } }">
    <a-form-model-item label="id" prop="id" :rules="{ required: true, message: `请输入 id！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 id" v-model="formState.ruleForm.id" allowClear />
        <!-- 
        // 文本
        {{ id ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 id" v-model="formState.ruleForm.id" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 id" v-model="formState.ruleForm.id" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 id" v-model="formState.ruleForm.id" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.id">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.id">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.id" />
        // 评分
        <a-rate v-model="formState.ruleForm.id" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="apiType" prop="apiType" :rules="{ required: true, message: `请输入 apiType！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 apiType" v-model="formState.ruleForm.apiType" allowClear />
        <!-- 
        // 文本
        {{ apiType ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 apiType" v-model="formState.ruleForm.apiType" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 apiType" v-model="formState.ruleForm.apiType" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 apiType" v-model="formState.ruleForm.apiType" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.apiType">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.apiType">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.apiType" />
        // 评分
        <a-rate v-model="formState.ruleForm.apiType" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="supportedFeatures" prop="supportedFeatures" :rules="{ required: true, message: `请输入 supportedFeatures！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 supportedFeatures" v-model="formState.ruleForm.supportedFeatures" allowClear />
        <!-- 
        // 文本
        {{ supportedFeatures ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 supportedFeatures" v-model="formState.ruleForm.supportedFeatures" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 supportedFeatures" v-model="formState.ruleForm.supportedFeatures" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 supportedFeatures" v-model="formState.ruleForm.supportedFeatures" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.supportedFeatures">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.supportedFeatures">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.supportedFeatures" />
        // 评分
        <a-rate v-model="formState.ruleForm.supportedFeatures" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="title" prop="title" :rules="{ required: true, message: `请输入 title！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 title" v-model="formState.ruleForm.title" allowClear />
        <!-- 
        // 文本
        {{ title ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 title" v-model="formState.ruleForm.title" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 title" v-model="formState.ruleForm.title" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 title" v-model="formState.ruleForm.title" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.title">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.title">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.title" />
        // 评分
        <a-rate v-model="formState.ruleForm.title" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="description" prop="description" :rules="{ required: true, message: `请输入 description！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 description" v-model="formState.ruleForm.description" allowClear />
        <!-- 
        // 文本
        {{ description ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 description" v-model="formState.ruleForm.description" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 description" v-model="formState.ruleForm.description" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 description" v-model="formState.ruleForm.description" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.description">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.description">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.description" />
        // 评分
        <a-rate v-model="formState.ruleForm.description" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="websiteUrl" prop="websiteUrl" :rules="{ required: true, message: `请输入 websiteUrl！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 websiteUrl" v-model="formState.ruleForm.websiteUrl" allowClear />
        <!-- 
        // 文本
        {{ websiteUrl ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 websiteUrl" v-model="formState.ruleForm.websiteUrl" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 websiteUrl" v-model="formState.ruleForm.websiteUrl" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 websiteUrl" v-model="formState.ruleForm.websiteUrl" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.websiteUrl">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.websiteUrl">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.websiteUrl" />
        // 评分
        <a-rate v-model="formState.ruleForm.websiteUrl" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="privacyPolicyUrl" prop="privacyPolicyUrl" :rules="{ required: true, message: `请输入 privacyPolicyUrl！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 privacyPolicyUrl" v-model="formState.ruleForm.privacyPolicyUrl" allowClear />
        <!-- 
        // 文本
        {{ privacyPolicyUrl ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 privacyPolicyUrl" v-model="formState.ruleForm.privacyPolicyUrl" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 privacyPolicyUrl" v-model="formState.ruleForm.privacyPolicyUrl" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 privacyPolicyUrl" v-model="formState.ruleForm.privacyPolicyUrl" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.privacyPolicyUrl">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.privacyPolicyUrl">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.privacyPolicyUrl" />
        // 评分
        <a-rate v-model="formState.ruleForm.privacyPolicyUrl" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="termsAndConditionsUrl" prop="termsAndConditionsUrl" :rules="{ required: true, message: `请输入 termsAndConditionsUrl！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 termsAndConditionsUrl" v-model="formState.ruleForm.termsAndConditionsUrl" allowClear />
        <!-- 
        // 文本
        {{ termsAndConditionsUrl ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 termsAndConditionsUrl" v-model="formState.ruleForm.termsAndConditionsUrl" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 termsAndConditionsUrl" v-model="formState.ruleForm.termsAndConditionsUrl" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 termsAndConditionsUrl" v-model="formState.ruleForm.termsAndConditionsUrl" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.termsAndConditionsUrl">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.termsAndConditionsUrl">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.termsAndConditionsUrl" />
        // 评分
        <a-rate v-model="formState.ruleForm.termsAndConditionsUrl" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="statusUrl" prop="statusUrl" :rules="{ required: true, message: `请输入 statusUrl！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 statusUrl" v-model="formState.ruleForm.statusUrl" allowClear />
        <!-- 
        // 文本
        {{ statusUrl ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 statusUrl" v-model="formState.ruleForm.statusUrl" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 statusUrl" v-model="formState.ruleForm.statusUrl" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 statusUrl" v-model="formState.ruleForm.statusUrl" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.statusUrl">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.statusUrl">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.statusUrl" />
        // 评分
        <a-rate v-model="formState.ruleForm.statusUrl" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="productionAPIEndpoint" prop="productionAPIEndpoint" :rules="{ required: true, message: `请输入 productionAPIEndpoint！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 productionAPIEndpoint" v-model="formState.ruleForm.productionAPIEndpoint" allowClear />
        <!-- 
        // 文本
        {{ productionAPIEndpoint ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 productionAPIEndpoint" v-model="formState.ruleForm.productionAPIEndpoint" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 productionAPIEndpoint" v-model="formState.ruleForm.productionAPIEndpoint" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 productionAPIEndpoint" v-model="formState.ruleForm.productionAPIEndpoint" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.productionAPIEndpoint">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.productionAPIEndpoint">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.productionAPIEndpoint" />
        // 评分
        <a-rate v-model="formState.ruleForm.productionAPIEndpoint" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="stagingAPIEndpoint" prop="stagingAPIEndpoint" :rules="{ required: true, message: `请输入 stagingAPIEndpoint！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 stagingAPIEndpoint" v-model="formState.ruleForm.stagingAPIEndpoint" allowClear />
        <!-- 
        // 文本
        {{ stagingAPIEndpoint ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 stagingAPIEndpoint" v-model="formState.ruleForm.stagingAPIEndpoint" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 stagingAPIEndpoint" v-model="formState.ruleForm.stagingAPIEndpoint" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 stagingAPIEndpoint" v-model="formState.ruleForm.stagingAPIEndpoint" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.stagingAPIEndpoint">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.stagingAPIEndpoint">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.stagingAPIEndpoint" />
        // 评分
        <a-rate v-model="formState.ruleForm.stagingAPIEndpoint" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="defaultPreferredChain" prop="defaultPreferredChain" :rules="{ required: true, message: `请输入 defaultPreferredChain！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 defaultPreferredChain" v-model="formState.ruleForm.defaultPreferredChain" allowClear />
        <!-- 
        // 文本
        {{ defaultPreferredChain ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 defaultPreferredChain" v-model="formState.ruleForm.defaultPreferredChain" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 defaultPreferredChain" v-model="formState.ruleForm.defaultPreferredChain" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 defaultPreferredChain" v-model="formState.ruleForm.defaultPreferredChain" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.defaultPreferredChain">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.defaultPreferredChain">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.defaultPreferredChain" />
        // 评分
        <a-rate v-model="formState.ruleForm.defaultPreferredChain" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="isEnabled" prop="isEnabled" :rules="{ required: true, message: `请输入 isEnabled！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 isEnabled" v-model="formState.ruleForm.isEnabled" allowClear />
        <!-- 
        // 文本
        {{ isEnabled ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 isEnabled" v-model="formState.ruleForm.isEnabled" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 isEnabled" v-model="formState.ruleForm.isEnabled" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 isEnabled" v-model="formState.ruleForm.isEnabled" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.isEnabled">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.isEnabled">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.isEnabled" />
        // 评分
        <a-rate v-model="formState.ruleForm.isEnabled" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="isCustom" prop="isCustom" :rules="{ required: true, message: `请输入 isCustom！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 isCustom" v-model="formState.ruleForm.isCustom" allowClear />
        <!-- 
        // 文本
        {{ isCustom ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 isCustom" v-model="formState.ruleForm.isCustom" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 isCustom" v-model="formState.ruleForm.isCustom" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 isCustom" v-model="formState.ruleForm.isCustom" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.isCustom">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.isCustom">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.isCustom" />
        // 评分
        <a-rate v-model="formState.ruleForm.isCustom" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="sanLimit" prop="sanLimit" :rules="{ required: true, message: `请输入 sanLimit！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 sanLimit" v-model="formState.ruleForm.sanLimit" allowClear />
        <!-- 
        // 文本
        {{ sanLimit ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 sanLimit" v-model="formState.ruleForm.sanLimit" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 sanLimit" v-model="formState.ruleForm.sanLimit" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 sanLimit" v-model="formState.ruleForm.sanLimit" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.sanLimit">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.sanLimit">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.sanLimit" />
        // 评分
        <a-rate v-model="formState.ruleForm.sanLimit" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="standardExpiryDays" prop="standardExpiryDays" :rules="{ required: true, message: `请输入 standardExpiryDays！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 standardExpiryDays" v-model="formState.ruleForm.standardExpiryDays" allowClear />
        <!-- 
        // 文本
        {{ standardExpiryDays ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 standardExpiryDays" v-model="formState.ruleForm.standardExpiryDays" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 standardExpiryDays" v-model="formState.ruleForm.standardExpiryDays" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 standardExpiryDays" v-model="formState.ruleForm.standardExpiryDays" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.standardExpiryDays">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.standardExpiryDays">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.standardExpiryDays" />
        // 评分
        <a-rate v-model="formState.ruleForm.standardExpiryDays" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="requiresEmailAddress" prop="requiresEmailAddress" :rules="{ required: true, message: `请输入 requiresEmailAddress！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 requiresEmailAddress" v-model="formState.ruleForm.requiresEmailAddress" allowClear />
        <!-- 
        // 文本
        {{ requiresEmailAddress ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 requiresEmailAddress" v-model="formState.ruleForm.requiresEmailAddress" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 requiresEmailAddress" v-model="formState.ruleForm.requiresEmailAddress" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 requiresEmailAddress" v-model="formState.ruleForm.requiresEmailAddress" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.requiresEmailAddress">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.requiresEmailAddress">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.requiresEmailAddress" />
        // 评分
        <a-rate v-model="formState.ruleForm.requiresEmailAddress" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="requiresExternalAccountBinding" prop="requiresExternalAccountBinding" :rules="{ required: true, message: `请输入 requiresExternalAccountBinding！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 requiresExternalAccountBinding" v-model="formState.ruleForm.requiresExternalAccountBinding" allowClear />
        <!-- 
        // 文本
        {{ requiresExternalAccountBinding ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 requiresExternalAccountBinding" v-model="formState.ruleForm.requiresExternalAccountBinding" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 requiresExternalAccountBinding" v-model="formState.ruleForm.requiresExternalAccountBinding" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 requiresExternalAccountBinding" v-model="formState.ruleForm.requiresExternalAccountBinding" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.requiresExternalAccountBinding">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.requiresExternalAccountBinding">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.requiresExternalAccountBinding" />
        // 评分
        <a-rate v-model="formState.ruleForm.requiresExternalAccountBinding" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="allowUntrustedTls" prop="allowUntrustedTls" :rules="{ required: true, message: `请输入 allowUntrustedTls！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 allowUntrustedTls" v-model="formState.ruleForm.allowUntrustedTls" allowClear />
        <!-- 
        // 文本
        {{ allowUntrustedTls ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 allowUntrustedTls" v-model="formState.ruleForm.allowUntrustedTls" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 allowUntrustedTls" v-model="formState.ruleForm.allowUntrustedTls" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 allowUntrustedTls" v-model="formState.ruleForm.allowUntrustedTls" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.allowUntrustedTls">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.allowUntrustedTls">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.allowUntrustedTls" />
        // 评分
        <a-rate v-model="formState.ruleForm.allowUntrustedTls" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="allowInternalHostnames" prop="allowInternalHostnames" :rules="{ required: true, message: `请输入 allowInternalHostnames！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 allowInternalHostnames" v-model="formState.ruleForm.allowInternalHostnames" allowClear />
        <!-- 
        // 文本
        {{ allowInternalHostnames ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 allowInternalHostnames" v-model="formState.ruleForm.allowInternalHostnames" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 allowInternalHostnames" v-model="formState.ruleForm.allowInternalHostnames" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 allowInternalHostnames" v-model="formState.ruleForm.allowInternalHostnames" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.allowInternalHostnames">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.allowInternalHostnames">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.allowInternalHostnames" />
        // 评分
        <a-rate v-model="formState.ruleForm.allowInternalHostnames" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="supportsCachedValidations" prop="supportsCachedValidations" :rules="{ required: true, message: `请输入 supportsCachedValidations！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 supportsCachedValidations" v-model="formState.ruleForm.supportsCachedValidations" allowClear />
        <!-- 
        // 文本
        {{ supportsCachedValidations ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 supportsCachedValidations" v-model="formState.ruleForm.supportsCachedValidations" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 supportsCachedValidations" v-model="formState.ruleForm.supportsCachedValidations" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 supportsCachedValidations" v-model="formState.ruleForm.supportsCachedValidations" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.supportsCachedValidations">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.supportsCachedValidations">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.supportsCachedValidations" />
        // 评分
        <a-rate v-model="formState.ruleForm.supportsCachedValidations" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="eabInstructions" prop="eabInstructions" :rules="{ required: true, message: `请输入 eabInstructions！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 eabInstructions" v-model="formState.ruleForm.eabInstructions" allowClear />
        <!-- 
        // 文本
        {{ eabInstructions ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 eabInstructions" v-model="formState.ruleForm.eabInstructions" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 eabInstructions" v-model="formState.ruleForm.eabInstructions" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 eabInstructions" v-model="formState.ruleForm.eabInstructions" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.eabInstructions">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.eabInstructions">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.eabInstructions" />
        // 评分
        <a-rate v-model="formState.ruleForm.eabInstructions" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="supportedKeyTypes" prop="supportedKeyTypes" :rules="{ required: true, message: `请输入 supportedKeyTypes！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 supportedKeyTypes" v-model="formState.ruleForm.supportedKeyTypes" allowClear />
        <!-- 
        // 文本
        {{ supportedKeyTypes ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 supportedKeyTypes" v-model="formState.ruleForm.supportedKeyTypes" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 supportedKeyTypes" v-model="formState.ruleForm.supportedKeyTypes" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 supportedKeyTypes" v-model="formState.ruleForm.supportedKeyTypes" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.supportedKeyTypes">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.supportedKeyTypes">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.supportedKeyTypes" />
        // 评分
        <a-rate v-model="formState.ruleForm.supportedKeyTypes" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="disabledIntermediates" prop="disabledIntermediates" :rules="{ required: true, message: `请输入 disabledIntermediates！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 disabledIntermediates" v-model="formState.ruleForm.disabledIntermediates" allowClear />
        <!-- 
        // 文本
        {{ disabledIntermediates ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 disabledIntermediates" v-model="formState.ruleForm.disabledIntermediates" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 disabledIntermediates" v-model="formState.ruleForm.disabledIntermediates" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 disabledIntermediates" v-model="formState.ruleForm.disabledIntermediates" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.disabledIntermediates">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.disabledIntermediates">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.disabledIntermediates" />
        // 评分
        <a-rate v-model="formState.ruleForm.disabledIntermediates" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="trustedRoots" prop="trustedRoots" :rules="{ required: true, message: `请输入 trustedRoots！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 trustedRoots" v-model="formState.ruleForm.trustedRoots" allowClear />
        <!-- 
        // 文本
        {{ trustedRoots ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 trustedRoots" v-model="formState.ruleForm.trustedRoots" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 trustedRoots" v-model="formState.ruleForm.trustedRoots" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 trustedRoots" v-model="formState.ruleForm.trustedRoots" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.trustedRoots">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.trustedRoots">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.trustedRoots" />
        // 评分
        <a-rate v-model="formState.ruleForm.trustedRoots" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="intermediates" prop="intermediates" :rules="{ required: true, message: `请输入 intermediates！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 intermediates" v-model="formState.ruleForm.intermediates" allowClear />
        <!-- 
        // 文本
        {{ intermediates ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 intermediates" v-model="formState.ruleForm.intermediates" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 intermediates" v-model="formState.ruleForm.intermediates" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 intermediates" v-model="formState.ruleForm.intermediates" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.intermediates">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.intermediates">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.intermediates" />
        // 评分
        <a-rate v-model="formState.ruleForm.intermediates" allow-half />
        -->
    </a-form-model-item>
</a-form-model>
*/

//#endregion

//#region ChallengeProviderDefinition 模型
export class ChallengeProviderDefinition {
    challengeType?: string | undefined;
    handlerType?: number;
    propagationDelaySeconds?: number;
    id?: string;
    title?: string;
    description?: string | undefined;
    helpUrl?: string | undefined;
    providerParameters?: ProviderParameter[] | undefined;
    config?: string | undefined;
    isExperimental?: boolean;
    isEnabled?: boolean;
    isTestModeSupported?: boolean;
    hasDynamicParameters?: boolean;
    providerCategoryId?: string;
    [key: string]: any;
}

export const ChallengeProviderDefinitionColumns = {
    ChallengeType: { dataIndex: 'challengeType', title: 'challengeType' },
    HandlerType: { dataIndex: 'handlerType', title: 'handlerType' },
    PropagationDelaySeconds: { dataIndex: 'propagationDelaySeconds', title: 'propagationDelaySeconds' },
    Id: { dataIndex: 'id', title: 'id' },
    Title: { dataIndex: 'title', title: 'title' },
    Description: { dataIndex: 'description', title: 'description' },
    HelpUrl: { dataIndex: 'helpUrl', title: 'helpUrl' },
    ProviderParameters: { dataIndex: 'providerParameters', title: 'providerParameters' },
    Config: { dataIndex: 'config', title: 'config' },
    IsExperimental: { dataIndex: 'isExperimental', title: 'isExperimental' },
    IsEnabled: { dataIndex: 'isEnabled', title: 'isEnabled' },
    IsTestModeSupported: { dataIndex: 'isTestModeSupported', title: 'isTestModeSupported' },
    HasDynamicParameters: { dataIndex: 'hasDynamicParameters', title: 'hasDynamicParameters' },
    ProviderCategoryId: { dataIndex: 'providerCategoryId', title: 'providerCategoryId' },
};

/* 
<a-form-model ref="formRef" :model="formState.ruleForm" :labelCol="{ xs: { span: 24 }, sm: { span: 5 } }" :wrapperCol="{ xs: { span: 24 }, sm: { span: 15 } }">
    <a-form-model-item label="challengeType" prop="challengeType" :rules="{ required: true, message: `请输入 challengeType！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 challengeType" v-model="formState.ruleForm.challengeType" allowClear />
        <!-- 
        // 文本
        {{ challengeType ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 challengeType" v-model="formState.ruleForm.challengeType" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 challengeType" v-model="formState.ruleForm.challengeType" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 challengeType" v-model="formState.ruleForm.challengeType" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.challengeType">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.challengeType">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.challengeType" />
        // 评分
        <a-rate v-model="formState.ruleForm.challengeType" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="handlerType" prop="handlerType" :rules="{ required: true, message: `请输入 handlerType！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 handlerType" v-model="formState.ruleForm.handlerType" allowClear />
        <!-- 
        // 文本
        {{ handlerType ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 handlerType" v-model="formState.ruleForm.handlerType" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 handlerType" v-model="formState.ruleForm.handlerType" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 handlerType" v-model="formState.ruleForm.handlerType" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.handlerType">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.handlerType">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.handlerType" />
        // 评分
        <a-rate v-model="formState.ruleForm.handlerType" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="propagationDelaySeconds" prop="propagationDelaySeconds" :rules="{ required: true, message: `请输入 propagationDelaySeconds！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 propagationDelaySeconds" v-model="formState.ruleForm.propagationDelaySeconds" allowClear />
        <!-- 
        // 文本
        {{ propagationDelaySeconds ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 propagationDelaySeconds" v-model="formState.ruleForm.propagationDelaySeconds" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 propagationDelaySeconds" v-model="formState.ruleForm.propagationDelaySeconds" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 propagationDelaySeconds" v-model="formState.ruleForm.propagationDelaySeconds" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.propagationDelaySeconds">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.propagationDelaySeconds">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.propagationDelaySeconds" />
        // 评分
        <a-rate v-model="formState.ruleForm.propagationDelaySeconds" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="id" prop="id" :rules="{ required: true, message: `请输入 id！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 id" v-model="formState.ruleForm.id" allowClear />
        <!-- 
        // 文本
        {{ id ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 id" v-model="formState.ruleForm.id" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 id" v-model="formState.ruleForm.id" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 id" v-model="formState.ruleForm.id" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.id">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.id">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.id" />
        // 评分
        <a-rate v-model="formState.ruleForm.id" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="title" prop="title" :rules="{ required: true, message: `请输入 title！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 title" v-model="formState.ruleForm.title" allowClear />
        <!-- 
        // 文本
        {{ title ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 title" v-model="formState.ruleForm.title" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 title" v-model="formState.ruleForm.title" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 title" v-model="formState.ruleForm.title" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.title">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.title">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.title" />
        // 评分
        <a-rate v-model="formState.ruleForm.title" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="description" prop="description" :rules="{ required: true, message: `请输入 description！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 description" v-model="formState.ruleForm.description" allowClear />
        <!-- 
        // 文本
        {{ description ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 description" v-model="formState.ruleForm.description" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 description" v-model="formState.ruleForm.description" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 description" v-model="formState.ruleForm.description" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.description">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.description">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.description" />
        // 评分
        <a-rate v-model="formState.ruleForm.description" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="helpUrl" prop="helpUrl" :rules="{ required: true, message: `请输入 helpUrl！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 helpUrl" v-model="formState.ruleForm.helpUrl" allowClear />
        <!-- 
        // 文本
        {{ helpUrl ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 helpUrl" v-model="formState.ruleForm.helpUrl" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 helpUrl" v-model="formState.ruleForm.helpUrl" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 helpUrl" v-model="formState.ruleForm.helpUrl" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.helpUrl">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.helpUrl">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.helpUrl" />
        // 评分
        <a-rate v-model="formState.ruleForm.helpUrl" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="providerParameters" prop="providerParameters" :rules="{ required: true, message: `请输入 providerParameters！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 providerParameters" v-model="formState.ruleForm.providerParameters" allowClear />
        <!-- 
        // 文本
        {{ providerParameters ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 providerParameters" v-model="formState.ruleForm.providerParameters" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 providerParameters" v-model="formState.ruleForm.providerParameters" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 providerParameters" v-model="formState.ruleForm.providerParameters" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.providerParameters">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.providerParameters">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.providerParameters" />
        // 评分
        <a-rate v-model="formState.ruleForm.providerParameters" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="config" prop="config" :rules="{ required: true, message: `请输入 config！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 config" v-model="formState.ruleForm.config" allowClear />
        <!-- 
        // 文本
        {{ config ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 config" v-model="formState.ruleForm.config" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 config" v-model="formState.ruleForm.config" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 config" v-model="formState.ruleForm.config" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.config">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.config">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.config" />
        // 评分
        <a-rate v-model="formState.ruleForm.config" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="isExperimental" prop="isExperimental" :rules="{ required: true, message: `请输入 isExperimental！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 isExperimental" v-model="formState.ruleForm.isExperimental" allowClear />
        <!-- 
        // 文本
        {{ isExperimental ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 isExperimental" v-model="formState.ruleForm.isExperimental" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 isExperimental" v-model="formState.ruleForm.isExperimental" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 isExperimental" v-model="formState.ruleForm.isExperimental" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.isExperimental">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.isExperimental">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.isExperimental" />
        // 评分
        <a-rate v-model="formState.ruleForm.isExperimental" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="isEnabled" prop="isEnabled" :rules="{ required: true, message: `请输入 isEnabled！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 isEnabled" v-model="formState.ruleForm.isEnabled" allowClear />
        <!-- 
        // 文本
        {{ isEnabled ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 isEnabled" v-model="formState.ruleForm.isEnabled" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 isEnabled" v-model="formState.ruleForm.isEnabled" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 isEnabled" v-model="formState.ruleForm.isEnabled" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.isEnabled">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.isEnabled">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.isEnabled" />
        // 评分
        <a-rate v-model="formState.ruleForm.isEnabled" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="isTestModeSupported" prop="isTestModeSupported" :rules="{ required: true, message: `请输入 isTestModeSupported！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 isTestModeSupported" v-model="formState.ruleForm.isTestModeSupported" allowClear />
        <!-- 
        // 文本
        {{ isTestModeSupported ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 isTestModeSupported" v-model="formState.ruleForm.isTestModeSupported" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 isTestModeSupported" v-model="formState.ruleForm.isTestModeSupported" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 isTestModeSupported" v-model="formState.ruleForm.isTestModeSupported" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.isTestModeSupported">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.isTestModeSupported">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.isTestModeSupported" />
        // 评分
        <a-rate v-model="formState.ruleForm.isTestModeSupported" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="hasDynamicParameters" prop="hasDynamicParameters" :rules="{ required: true, message: `请输入 hasDynamicParameters！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 hasDynamicParameters" v-model="formState.ruleForm.hasDynamicParameters" allowClear />
        <!-- 
        // 文本
        {{ hasDynamicParameters ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 hasDynamicParameters" v-model="formState.ruleForm.hasDynamicParameters" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 hasDynamicParameters" v-model="formState.ruleForm.hasDynamicParameters" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 hasDynamicParameters" v-model="formState.ruleForm.hasDynamicParameters" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.hasDynamicParameters">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.hasDynamicParameters">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.hasDynamicParameters" />
        // 评分
        <a-rate v-model="formState.ruleForm.hasDynamicParameters" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="providerCategoryId" prop="providerCategoryId" :rules="{ required: true, message: `请输入 providerCategoryId！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 providerCategoryId" v-model="formState.ruleForm.providerCategoryId" allowClear />
        <!-- 
        // 文本
        {{ providerCategoryId ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 providerCategoryId" v-model="formState.ruleForm.providerCategoryId" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 providerCategoryId" v-model="formState.ruleForm.providerCategoryId" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 providerCategoryId" v-model="formState.ruleForm.providerCategoryId" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.providerCategoryId">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.providerCategoryId">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.providerCategoryId" />
        // 评分
        <a-rate v-model="formState.ruleForm.providerCategoryId" allow-half />
        -->
    </a-form-model-item>
</a-form-model>
*/

//#endregion

//#region DnsInfoCreateInput 模型
export class DnsInfoCreateInput {
    providerType?: string;
    credentials?: { [key: string]: string; };
    parameters?: { [key: string]: string; };
    description?: string | undefined;
    [key: string]: any;
}

export const DnsInfoCreateInputColumns = {
    ProviderType: { dataIndex: 'providerType', title: 'providerType' },
    Credentials: { dataIndex: 'credentials', title: 'credentials' },
    Parameters: { dataIndex: 'parameters', title: 'parameters' },
    Description: { dataIndex: 'description', title: 'description' },
};

/* 
<a-form-model ref="formRef" :model="formState.ruleForm" :labelCol="{ xs: { span: 24 }, sm: { span: 5 } }" :wrapperCol="{ xs: { span: 24 }, sm: { span: 15 } }">
    <a-form-model-item label="providerType" prop="providerType" :rules="{ required: true, message: `请输入 providerType！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 providerType" v-model="formState.ruleForm.providerType" allowClear />
        <!-- 
        // 文本
        {{ providerType ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 providerType" v-model="formState.ruleForm.providerType" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 providerType" v-model="formState.ruleForm.providerType" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 providerType" v-model="formState.ruleForm.providerType" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.providerType">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.providerType">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.providerType" />
        // 评分
        <a-rate v-model="formState.ruleForm.providerType" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="credentials" prop="credentials" :rules="{ required: true, message: `请输入 credentials！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 credentials" v-model="formState.ruleForm.credentials" allowClear />
        <!-- 
        // 文本
        {{ credentials ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 credentials" v-model="formState.ruleForm.credentials" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 credentials" v-model="formState.ruleForm.credentials" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 credentials" v-model="formState.ruleForm.credentials" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.credentials">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.credentials">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.credentials" />
        // 评分
        <a-rate v-model="formState.ruleForm.credentials" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="parameters" prop="parameters" :rules="{ required: true, message: `请输入 parameters！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 parameters" v-model="formState.ruleForm.parameters" allowClear />
        <!-- 
        // 文本
        {{ parameters ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 parameters" v-model="formState.ruleForm.parameters" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 parameters" v-model="formState.ruleForm.parameters" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 parameters" v-model="formState.ruleForm.parameters" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.parameters">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.parameters">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.parameters" />
        // 评分
        <a-rate v-model="formState.ruleForm.parameters" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="description" prop="description" :rules="{ required: true, message: `请输入 description！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 description" v-model="formState.ruleForm.description" allowClear />
        <!-- 
        // 文本
        {{ description ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 description" v-model="formState.ruleForm.description" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 description" v-model="formState.ruleForm.description" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 description" v-model="formState.ruleForm.description" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.description">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.description">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.description" />
        // 评分
        <a-rate v-model="formState.ruleForm.description" allow-half />
        -->
    </a-form-model-item>
</a-form-model>
*/

//#endregion

//#region DnsInfoDetailOutput 模型
export class DnsInfoDetailOutput {
    id?: number;
    providerType?: string;
    credentials?: { [key: string]: string; };
    parameters?: { [key: string]: string; };
    description?: string | undefined;
    [key: string]: any;
}

export const DnsInfoDetailOutputColumns = {
    Id: { dataIndex: 'id', title: 'id' },
    ProviderType: { dataIndex: 'providerType', title: 'providerType' },
    Credentials: { dataIndex: 'credentials', title: 'credentials' },
    Parameters: { dataIndex: 'parameters', title: 'parameters' },
    Description: { dataIndex: 'description', title: 'description' },
};

/* 
<a-form-model ref="formRef" :model="formState.ruleForm" :labelCol="{ xs: { span: 24 }, sm: { span: 5 } }" :wrapperCol="{ xs: { span: 24 }, sm: { span: 15 } }">
    <a-form-model-item label="id" prop="id" :rules="{ required: true, message: `请输入 id！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 id" v-model="formState.ruleForm.id" allowClear />
        <!-- 
        // 文本
        {{ id ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 id" v-model="formState.ruleForm.id" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 id" v-model="formState.ruleForm.id" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 id" v-model="formState.ruleForm.id" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.id">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.id">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.id" />
        // 评分
        <a-rate v-model="formState.ruleForm.id" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="providerType" prop="providerType" :rules="{ required: true, message: `请输入 providerType！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 providerType" v-model="formState.ruleForm.providerType" allowClear />
        <!-- 
        // 文本
        {{ providerType ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 providerType" v-model="formState.ruleForm.providerType" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 providerType" v-model="formState.ruleForm.providerType" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 providerType" v-model="formState.ruleForm.providerType" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.providerType">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.providerType">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.providerType" />
        // 评分
        <a-rate v-model="formState.ruleForm.providerType" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="credentials" prop="credentials" :rules="{ required: true, message: `请输入 credentials！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 credentials" v-model="formState.ruleForm.credentials" allowClear />
        <!-- 
        // 文本
        {{ credentials ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 credentials" v-model="formState.ruleForm.credentials" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 credentials" v-model="formState.ruleForm.credentials" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 credentials" v-model="formState.ruleForm.credentials" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.credentials">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.credentials">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.credentials" />
        // 评分
        <a-rate v-model="formState.ruleForm.credentials" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="parameters" prop="parameters" :rules="{ required: true, message: `请输入 parameters！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 parameters" v-model="formState.ruleForm.parameters" allowClear />
        <!-- 
        // 文本
        {{ parameters ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 parameters" v-model="formState.ruleForm.parameters" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 parameters" v-model="formState.ruleForm.parameters" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 parameters" v-model="formState.ruleForm.parameters" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.parameters">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.parameters">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.parameters" />
        // 评分
        <a-rate v-model="formState.ruleForm.parameters" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="description" prop="description" :rules="{ required: true, message: `请输入 description！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 description" v-model="formState.ruleForm.description" allowClear />
        <!-- 
        // 文本
        {{ description ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 description" v-model="formState.ruleForm.description" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 description" v-model="formState.ruleForm.description" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 description" v-model="formState.ruleForm.description" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.description">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.description">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.description" />
        // 评分
        <a-rate v-model="formState.ruleForm.description" allow-half />
        -->
    </a-form-model-item>
</a-form-model>
*/

//#endregion

//#region DnsInfoUpdateInput 模型
export class DnsInfoUpdateInput {
    id?: number;
    providerType?: string;
    credentials?: { [key: string]: string; };
    parameters?: { [key: string]: string; };
    description?: string | undefined;
    [key: string]: any;
}

export const DnsInfoUpdateInputColumns = {
    Id: { dataIndex: 'id', title: 'id' },
    ProviderType: { dataIndex: 'providerType', title: 'providerType' },
    Credentials: { dataIndex: 'credentials', title: 'credentials' },
    Parameters: { dataIndex: 'parameters', title: 'parameters' },
    Description: { dataIndex: 'description', title: 'description' },
};

/* 
<a-form-model ref="formRef" :model="formState.ruleForm" :labelCol="{ xs: { span: 24 }, sm: { span: 5 } }" :wrapperCol="{ xs: { span: 24 }, sm: { span: 15 } }">
    <a-form-model-item label="id" prop="id" :rules="{ required: true, message: `请输入 id！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 id" v-model="formState.ruleForm.id" allowClear />
        <!-- 
        // 文本
        {{ id ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 id" v-model="formState.ruleForm.id" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 id" v-model="formState.ruleForm.id" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 id" v-model="formState.ruleForm.id" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.id">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.id">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.id" />
        // 评分
        <a-rate v-model="formState.ruleForm.id" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="providerType" prop="providerType" :rules="{ required: true, message: `请输入 providerType！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 providerType" v-model="formState.ruleForm.providerType" allowClear />
        <!-- 
        // 文本
        {{ providerType ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 providerType" v-model="formState.ruleForm.providerType" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 providerType" v-model="formState.ruleForm.providerType" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 providerType" v-model="formState.ruleForm.providerType" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.providerType">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.providerType">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.providerType" />
        // 评分
        <a-rate v-model="formState.ruleForm.providerType" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="credentials" prop="credentials" :rules="{ required: true, message: `请输入 credentials！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 credentials" v-model="formState.ruleForm.credentials" allowClear />
        <!-- 
        // 文本
        {{ credentials ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 credentials" v-model="formState.ruleForm.credentials" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 credentials" v-model="formState.ruleForm.credentials" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 credentials" v-model="formState.ruleForm.credentials" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.credentials">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.credentials">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.credentials" />
        // 评分
        <a-rate v-model="formState.ruleForm.credentials" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="parameters" prop="parameters" :rules="{ required: true, message: `请输入 parameters！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 parameters" v-model="formState.ruleForm.parameters" allowClear />
        <!-- 
        // 文本
        {{ parameters ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 parameters" v-model="formState.ruleForm.parameters" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 parameters" v-model="formState.ruleForm.parameters" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 parameters" v-model="formState.ruleForm.parameters" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.parameters">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.parameters">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.parameters" />
        // 评分
        <a-rate v-model="formState.ruleForm.parameters" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="description" prop="description" :rules="{ required: true, message: `请输入 description！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 description" v-model="formState.ruleForm.description" allowClear />
        <!-- 
        // 文本
        {{ description ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 description" v-model="formState.ruleForm.description" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 description" v-model="formState.ruleForm.description" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 description" v-model="formState.ruleForm.description" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.description">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.description">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.description" />
        // 评分
        <a-rate v-model="formState.ruleForm.description" allow-half />
        -->
    </a-form-model-item>
</a-form-model>
*/

//#endregion

//#region ProviderParameter 模型
export class ProviderParameter {
    key?: string | undefined;
    name?: string | undefined;
    description?: string | undefined;
    isPassword?: boolean;
    isMultiLine?: boolean;
    isRequired?: boolean;
    isHidden?: boolean;
    value?: string | undefined;
    isCredential?: boolean;
    optionsList?: string | undefined;
    type?: number | undefined;
    extendedConfig?: string | undefined;
    options?: { [key: string]: string; } | undefined;
    [key: string]: any;
}

export const ProviderParameterColumns = {
    Key: { dataIndex: 'key', title: 'key' },
    Name: { dataIndex: 'name', title: 'name' },
    Description: { dataIndex: 'description', title: 'description' },
    IsPassword: { dataIndex: 'isPassword', title: 'isPassword' },
    IsMultiLine: { dataIndex: 'isMultiLine', title: 'isMultiLine' },
    IsRequired: { dataIndex: 'isRequired', title: 'isRequired' },
    IsHidden: { dataIndex: 'isHidden', title: 'isHidden' },
    Value: { dataIndex: 'value', title: 'value' },
    IsCredential: { dataIndex: 'isCredential', title: 'isCredential' },
    OptionsList: { dataIndex: 'optionsList', title: 'optionsList' },
    Type: { dataIndex: 'type', title: 'type' },
    ExtendedConfig: { dataIndex: 'extendedConfig', title: 'extendedConfig' },
    Options: { dataIndex: 'options', title: 'options' },
};

/* 
<a-form-model ref="formRef" :model="formState.ruleForm" :labelCol="{ xs: { span: 24 }, sm: { span: 5 } }" :wrapperCol="{ xs: { span: 24 }, sm: { span: 15 } }">
    <a-form-model-item label="key" prop="key" :rules="{ required: true, message: `请输入 key！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 key" v-model="formState.ruleForm.key" allowClear />
        <!-- 
        // 文本
        {{ key ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 key" v-model="formState.ruleForm.key" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 key" v-model="formState.ruleForm.key" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 key" v-model="formState.ruleForm.key" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.key">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.key">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.key" />
        // 评分
        <a-rate v-model="formState.ruleForm.key" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="name" prop="name" :rules="{ required: true, message: `请输入 name！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 name" v-model="formState.ruleForm.name" allowClear />
        <!-- 
        // 文本
        {{ name ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 name" v-model="formState.ruleForm.name" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 name" v-model="formState.ruleForm.name" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 name" v-model="formState.ruleForm.name" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.name">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.name">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.name" />
        // 评分
        <a-rate v-model="formState.ruleForm.name" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="description" prop="description" :rules="{ required: true, message: `请输入 description！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 description" v-model="formState.ruleForm.description" allowClear />
        <!-- 
        // 文本
        {{ description ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 description" v-model="formState.ruleForm.description" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 description" v-model="formState.ruleForm.description" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 description" v-model="formState.ruleForm.description" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.description">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.description">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.description" />
        // 评分
        <a-rate v-model="formState.ruleForm.description" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="isPassword" prop="isPassword" :rules="{ required: true, message: `请输入 isPassword！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 isPassword" v-model="formState.ruleForm.isPassword" allowClear />
        <!-- 
        // 文本
        {{ isPassword ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 isPassword" v-model="formState.ruleForm.isPassword" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 isPassword" v-model="formState.ruleForm.isPassword" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 isPassword" v-model="formState.ruleForm.isPassword" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.isPassword">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.isPassword">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.isPassword" />
        // 评分
        <a-rate v-model="formState.ruleForm.isPassword" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="isMultiLine" prop="isMultiLine" :rules="{ required: true, message: `请输入 isMultiLine！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 isMultiLine" v-model="formState.ruleForm.isMultiLine" allowClear />
        <!-- 
        // 文本
        {{ isMultiLine ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 isMultiLine" v-model="formState.ruleForm.isMultiLine" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 isMultiLine" v-model="formState.ruleForm.isMultiLine" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 isMultiLine" v-model="formState.ruleForm.isMultiLine" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.isMultiLine">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.isMultiLine">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.isMultiLine" />
        // 评分
        <a-rate v-model="formState.ruleForm.isMultiLine" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="isRequired" prop="isRequired" :rules="{ required: true, message: `请输入 isRequired！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 isRequired" v-model="formState.ruleForm.isRequired" allowClear />
        <!-- 
        // 文本
        {{ isRequired ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 isRequired" v-model="formState.ruleForm.isRequired" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 isRequired" v-model="formState.ruleForm.isRequired" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 isRequired" v-model="formState.ruleForm.isRequired" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.isRequired">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.isRequired">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.isRequired" />
        // 评分
        <a-rate v-model="formState.ruleForm.isRequired" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="isHidden" prop="isHidden" :rules="{ required: true, message: `请输入 isHidden！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 isHidden" v-model="formState.ruleForm.isHidden" allowClear />
        <!-- 
        // 文本
        {{ isHidden ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 isHidden" v-model="formState.ruleForm.isHidden" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 isHidden" v-model="formState.ruleForm.isHidden" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 isHidden" v-model="formState.ruleForm.isHidden" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.isHidden">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.isHidden">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.isHidden" />
        // 评分
        <a-rate v-model="formState.ruleForm.isHidden" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="value" prop="value" :rules="{ required: true, message: `请输入 value！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 value" v-model="formState.ruleForm.value" allowClear />
        <!-- 
        // 文本
        {{ value ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 value" v-model="formState.ruleForm.value" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 value" v-model="formState.ruleForm.value" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 value" v-model="formState.ruleForm.value" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.value">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.value">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.value" />
        // 评分
        <a-rate v-model="formState.ruleForm.value" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="isCredential" prop="isCredential" :rules="{ required: true, message: `请输入 isCredential！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 isCredential" v-model="formState.ruleForm.isCredential" allowClear />
        <!-- 
        // 文本
        {{ isCredential ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 isCredential" v-model="formState.ruleForm.isCredential" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 isCredential" v-model="formState.ruleForm.isCredential" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 isCredential" v-model="formState.ruleForm.isCredential" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.isCredential">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.isCredential">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.isCredential" />
        // 评分
        <a-rate v-model="formState.ruleForm.isCredential" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="optionsList" prop="optionsList" :rules="{ required: true, message: `请输入 optionsList！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 optionsList" v-model="formState.ruleForm.optionsList" allowClear />
        <!-- 
        // 文本
        {{ optionsList ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 optionsList" v-model="formState.ruleForm.optionsList" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 optionsList" v-model="formState.ruleForm.optionsList" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 optionsList" v-model="formState.ruleForm.optionsList" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.optionsList">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.optionsList">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.optionsList" />
        // 评分
        <a-rate v-model="formState.ruleForm.optionsList" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="type" prop="type" :rules="{ required: true, message: `请输入 type！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 type" v-model="formState.ruleForm.type" allowClear />
        <!-- 
        // 文本
        {{ type ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 type" v-model="formState.ruleForm.type" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 type" v-model="formState.ruleForm.type" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 type" v-model="formState.ruleForm.type" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.type">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.type">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.type" />
        // 评分
        <a-rate v-model="formState.ruleForm.type" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="extendedConfig" prop="extendedConfig" :rules="{ required: true, message: `请输入 extendedConfig！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 extendedConfig" v-model="formState.ruleForm.extendedConfig" allowClear />
        <!-- 
        // 文本
        {{ extendedConfig ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 extendedConfig" v-model="formState.ruleForm.extendedConfig" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 extendedConfig" v-model="formState.ruleForm.extendedConfig" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 extendedConfig" v-model="formState.ruleForm.extendedConfig" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.extendedConfig">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.extendedConfig">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.extendedConfig" />
        // 评分
        <a-rate v-model="formState.ruleForm.extendedConfig" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="options" prop="options" :rules="{ required: true, message: `请输入 options！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 options" v-model="formState.ruleForm.options" allowClear />
        <!-- 
        // 文本
        {{ options ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 options" v-model="formState.ruleForm.options" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 options" v-model="formState.ruleForm.options" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 options" v-model="formState.ruleForm.options" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.options">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.options">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.options" />
        // 评分
        <a-rate v-model="formState.ruleForm.options" allow-half />
        -->
    </a-form-model-item>
</a-form-model>
*/

//#endregion

//#region SqlSugarPagedListOfAcmeInfoDetailOutput 模型
export class SqlSugarPagedListOfAcmeInfoDetailOutput {
    page?: number;
    pageSize?: number;
    total?: number;
    totalPages?: number;
    items?: AcmeInfoDetailOutput[];
    hasPrevPage?: boolean;
    hasNextPage?: boolean;
    [key: string]: any;
}

export const SqlSugarPagedListOfAcmeInfoDetailOutputColumns = {
    Page: { dataIndex: 'page', title: 'page' },
    PageSize: { dataIndex: 'pageSize', title: 'pageSize' },
    Total: { dataIndex: 'total', title: 'total' },
    TotalPages: { dataIndex: 'totalPages', title: 'totalPages' },
    Items: { dataIndex: 'items', title: 'items' },
    HasPrevPage: { dataIndex: 'hasPrevPage', title: 'hasPrevPage' },
    HasNextPage: { dataIndex: 'hasNextPage', title: 'hasNextPage' },
};

/* 
<a-form-model ref="formRef" :model="formState.ruleForm" :labelCol="{ xs: { span: 24 }, sm: { span: 5 } }" :wrapperCol="{ xs: { span: 24 }, sm: { span: 15 } }">
    <a-form-model-item label="page" prop="page" :rules="{ required: true, message: `请输入 page！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 page" v-model="formState.ruleForm.page" allowClear />
        <!-- 
        // 文本
        {{ page ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 page" v-model="formState.ruleForm.page" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 page" v-model="formState.ruleForm.page" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 page" v-model="formState.ruleForm.page" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.page">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.page">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.page" />
        // 评分
        <a-rate v-model="formState.ruleForm.page" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="pageSize" prop="pageSize" :rules="{ required: true, message: `请输入 pageSize！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 pageSize" v-model="formState.ruleForm.pageSize" allowClear />
        <!-- 
        // 文本
        {{ pageSize ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 pageSize" v-model="formState.ruleForm.pageSize" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 pageSize" v-model="formState.ruleForm.pageSize" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 pageSize" v-model="formState.ruleForm.pageSize" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.pageSize">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.pageSize">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.pageSize" />
        // 评分
        <a-rate v-model="formState.ruleForm.pageSize" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="total" prop="total" :rules="{ required: true, message: `请输入 total！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 total" v-model="formState.ruleForm.total" allowClear />
        <!-- 
        // 文本
        {{ total ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 total" v-model="formState.ruleForm.total" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 total" v-model="formState.ruleForm.total" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 total" v-model="formState.ruleForm.total" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.total">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.total">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.total" />
        // 评分
        <a-rate v-model="formState.ruleForm.total" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="totalPages" prop="totalPages" :rules="{ required: true, message: `请输入 totalPages！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 totalPages" v-model="formState.ruleForm.totalPages" allowClear />
        <!-- 
        // 文本
        {{ totalPages ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 totalPages" v-model="formState.ruleForm.totalPages" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 totalPages" v-model="formState.ruleForm.totalPages" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 totalPages" v-model="formState.ruleForm.totalPages" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.totalPages">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.totalPages">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.totalPages" />
        // 评分
        <a-rate v-model="formState.ruleForm.totalPages" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="items" prop="items" :rules="{ required: true, message: `请输入 items！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 items" v-model="formState.ruleForm.items" allowClear />
        <!-- 
        // 文本
        {{ items ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 items" v-model="formState.ruleForm.items" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 items" v-model="formState.ruleForm.items" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 items" v-model="formState.ruleForm.items" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.items">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.items">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.items" />
        // 评分
        <a-rate v-model="formState.ruleForm.items" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="hasPrevPage" prop="hasPrevPage" :rules="{ required: true, message: `请输入 hasPrevPage！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 hasPrevPage" v-model="formState.ruleForm.hasPrevPage" allowClear />
        <!-- 
        // 文本
        {{ hasPrevPage ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 hasPrevPage" v-model="formState.ruleForm.hasPrevPage" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 hasPrevPage" v-model="formState.ruleForm.hasPrevPage" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 hasPrevPage" v-model="formState.ruleForm.hasPrevPage" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.hasPrevPage">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.hasPrevPage">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.hasPrevPage" />
        // 评分
        <a-rate v-model="formState.ruleForm.hasPrevPage" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="hasNextPage" prop="hasNextPage" :rules="{ required: true, message: `请输入 hasNextPage！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 hasNextPage" v-model="formState.ruleForm.hasNextPage" allowClear />
        <!-- 
        // 文本
        {{ hasNextPage ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 hasNextPage" v-model="formState.ruleForm.hasNextPage" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 hasNextPage" v-model="formState.ruleForm.hasNextPage" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 hasNextPage" v-model="formState.ruleForm.hasNextPage" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.hasNextPage">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.hasNextPage">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.hasNextPage" />
        // 评分
        <a-rate v-model="formState.ruleForm.hasNextPage" allow-half />
        -->
    </a-form-model-item>
</a-form-model>
*/

//#endregion

//#region SqlSugarPagedListOfDnsInfoDetailOutput 模型
export class SqlSugarPagedListOfDnsInfoDetailOutput {
    page?: number;
    pageSize?: number;
    total?: number;
    totalPages?: number;
    items?: DnsInfoDetailOutput[];
    hasPrevPage?: boolean;
    hasNextPage?: boolean;
    [key: string]: any;
}

export const SqlSugarPagedListOfDnsInfoDetailOutputColumns = {
    Page: { dataIndex: 'page', title: 'page' },
    PageSize: { dataIndex: 'pageSize', title: 'pageSize' },
    Total: { dataIndex: 'total', title: 'total' },
    TotalPages: { dataIndex: 'totalPages', title: 'totalPages' },
    Items: { dataIndex: 'items', title: 'items' },
    HasPrevPage: { dataIndex: 'hasPrevPage', title: 'hasPrevPage' },
    HasNextPage: { dataIndex: 'hasNextPage', title: 'hasNextPage' },
};

/* 
<a-form-model ref="formRef" :model="formState.ruleForm" :labelCol="{ xs: { span: 24 }, sm: { span: 5 } }" :wrapperCol="{ xs: { span: 24 }, sm: { span: 15 } }">
    <a-form-model-item label="page" prop="page" :rules="{ required: true, message: `请输入 page！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 page" v-model="formState.ruleForm.page" allowClear />
        <!-- 
        // 文本
        {{ page ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 page" v-model="formState.ruleForm.page" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 page" v-model="formState.ruleForm.page" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 page" v-model="formState.ruleForm.page" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.page">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.page">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.page" />
        // 评分
        <a-rate v-model="formState.ruleForm.page" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="pageSize" prop="pageSize" :rules="{ required: true, message: `请输入 pageSize！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 pageSize" v-model="formState.ruleForm.pageSize" allowClear />
        <!-- 
        // 文本
        {{ pageSize ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 pageSize" v-model="formState.ruleForm.pageSize" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 pageSize" v-model="formState.ruleForm.pageSize" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 pageSize" v-model="formState.ruleForm.pageSize" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.pageSize">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.pageSize">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.pageSize" />
        // 评分
        <a-rate v-model="formState.ruleForm.pageSize" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="total" prop="total" :rules="{ required: true, message: `请输入 total！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 total" v-model="formState.ruleForm.total" allowClear />
        <!-- 
        // 文本
        {{ total ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 total" v-model="formState.ruleForm.total" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 total" v-model="formState.ruleForm.total" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 total" v-model="formState.ruleForm.total" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.total">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.total">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.total" />
        // 评分
        <a-rate v-model="formState.ruleForm.total" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="totalPages" prop="totalPages" :rules="{ required: true, message: `请输入 totalPages！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 totalPages" v-model="formState.ruleForm.totalPages" allowClear />
        <!-- 
        // 文本
        {{ totalPages ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 totalPages" v-model="formState.ruleForm.totalPages" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 totalPages" v-model="formState.ruleForm.totalPages" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 totalPages" v-model="formState.ruleForm.totalPages" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.totalPages">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.totalPages">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.totalPages" />
        // 评分
        <a-rate v-model="formState.ruleForm.totalPages" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="items" prop="items" :rules="{ required: true, message: `请输入 items！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 items" v-model="formState.ruleForm.items" allowClear />
        <!-- 
        // 文本
        {{ items ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 items" v-model="formState.ruleForm.items" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 items" v-model="formState.ruleForm.items" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 items" v-model="formState.ruleForm.items" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.items">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.items">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.items" />
        // 评分
        <a-rate v-model="formState.ruleForm.items" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="hasPrevPage" prop="hasPrevPage" :rules="{ required: true, message: `请输入 hasPrevPage！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 hasPrevPage" v-model="formState.ruleForm.hasPrevPage" allowClear />
        <!-- 
        // 文本
        {{ hasPrevPage ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 hasPrevPage" v-model="formState.ruleForm.hasPrevPage" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 hasPrevPage" v-model="formState.ruleForm.hasPrevPage" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 hasPrevPage" v-model="formState.ruleForm.hasPrevPage" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.hasPrevPage">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.hasPrevPage">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.hasPrevPage" />
        // 评分
        <a-rate v-model="formState.ruleForm.hasPrevPage" allow-half />
        -->
    </a-form-model-item>
    <a-form-model-item label="hasNextPage" prop="hasNextPage" :rules="{ required: true, message: `请输入 hasNextPage！`, trigger: 'blur' }" has-feedback>
        <a-input placeholder="请输入 hasNextPage" v-model="formState.ruleForm.hasNextPage" allowClear />
        <!-- 
        // 文本
        {{ hasNextPage ?? "-" }}
        // 文本域
        <a-textarea placeholder="请输入 hasNextPage" v-model="formState.ruleForm.hasNextPage" allowClear show-count :rows="4" />
        // 日期选择框
        <a-date-picker placeholder="请选择 hasNextPage" v-model="formState.ruleForm.hasNextPage" allowClear style="width: 100%;" />
        // 下拉选择框
        <a-select placeholder="请选择 hasNextPage" v-model="formState.ruleForm.hasNextPage" allowClear>
            <a-select-option value="A" key="A">test</a-select-option>
            <a-select-option value="B" key="B">test</a-select-option>
        </a-select>
        // 单选框
        <a-radio-group v-model="formState.ruleForm.hasNextPage">
            <a-radio-button value="A">A</a-radio-button>
            <a-radio-button value="B">B</a-radio-button>
        </a-radio-group>
        // 复选框
        <a-checkbox-group v-model="formState.ruleForm.hasNextPage">
            <a-checkbox value="A">A</a-checkbox>
            <a-checkbox value="B">B</a-checkbox>
        </a-checkbox-group>
        // 开关
        <a-switch checked-children="开" un-checked-children="关" v-model="formState.ruleForm.hasNextPage" />
        // 评分
        <a-rate v-model="formState.ruleForm.hasNextPage" allow-half />
        -->
    </a-form-model-item>
</a-form-model>
*/

//#endregion

export class FileResponse {
    data: Blob | undefined;
    status: number | undefined;
    fileName?: string | undefined;
    headers?: { [name: string]: any };
}

export interface FileParameter {
    data: any;
    fileName: string;
}