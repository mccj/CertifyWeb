<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Finish" xml:space="preserve">
    <value>完了</value>
  </data>
  <data name="CertifyManager_DomainValidationFailed" xml:space="preserve">
    <value>ドメイン検証に失敗しました: {0} {1}</value>
  </data>
  <data name="CertifyManager_DomainValidationCompleted" xml:space="preserve">
    <value>ドメインの検証が完了: {0}</value>
  </data>
  <data name="CertifyManager_RequestCertificate" xml:space="preserve">
    <value>ACME CA で証明書を要求</value>
  </data>
  <data name="CertifyManager_CompleteRequest" xml:space="preserve">
    <value>証明書の要求を完了しました。</value>
  </data>
  <data name="CertifyManager_CertificateInstalledAndBindingUpdated" xml:space="preserve">
    <value>証明書をインストールして SSL バインドを更新 : {0} </value>
  </data>
  <data name="CertifyManager_RequestFailed" xml:space="preserve">
    <value>{0}: 要求が失敗しました - {1}  {2}</value>
  </data>
  <data name="CertifyManager_PerformingConfigTests" xml:space="preserve">
    <value>設定テストの実行</value>
  </data>
  <data name="CertifyManager_RegisteringAndValidatingX0" xml:space="preserve">
    <value>{0}の登録と検証</value>
  </data>
  <data name="CertifyManager_SkipRenewalOk" xml:space="preserve">
    <value>更新をスキップ、既存の証明書は利用できます。</value>
  </data>
  <data name="ManagedCertificateType_LocalIIS" xml:space="preserve">
    <value>ローカルIIS、SSL証明書を ACME CA</value>
  </data>
  <data name="ManagedCertificateType_Manual" xml:space="preserve">
    <value>マニュアルのSSL証明書を ACME CA</value>
  </data>
  <data name="CertifyManager_CertificateInstallFailed" xml:space="preserve">
    <value>証明書のインストール中にエラーが発生しました。 証明書ファイルが有効でない可能性があります：{0}</value>
  </data>
  <data name="CertifyManager_DomainValidationSkipVerifed" xml:space="preserve">
    <value>すでに承認されているドメインは確認をスキップする: {0}!</value>
  </data>
  <data name="CertifyManager_AutomateConfigurationCheckFailed_HTTP" xml:space="preserve">
    <value>自動設定チェックに失敗しました。 承認を完了することはできません。
サイトのhttpバインディングを確認し、続行する前に http://{0}/.well-known/acme-challenge/configcheck を参照できるようにしてください。</value>
  </data>
  <data name="CertifyManager_AutomateConfigurationCheckFailed_SNI" xml:space="preserve">
    <value>
自動設定チェックに失敗しました。 承認を完了することはできません。
続行する前に、サイトのhttps SNIバインディング（例えば： '0123456789ABCDEF0123456789ABCDEF.0123456789ABCDEF0123456789ABCDEF.acme.invalid'）を確認してください。</value>
  </data>
  <data name="CertifyManager_CertificateCreatedForBinding" xml:space="preserve">
    <value>手動バインドで準備した証明書が作成されました: {0}</value>
  </data>
  <data name="CertificateRequestWasAbortedByPSScript" xml:space="preserve">
    <value>PSスクリプトによる証明書リクエストが中断されました</value>
  </data>
  <data name="CertifyManager_CompleteRequestAndUpdateBinding" xml:space="preserve">
    <value>完了した証明書と自動バインディングの更新（IIS）</value>
  </data>
  <data name="CertifyManager_FailedPrerequisiteCheck" xml:space="preserve">
    <value>失敗した前提条件設定チェック（{0}）</value>
  </data>
  <data name="CertifyManager_ValidationForChallengeNotSuccess" xml:space="preserve">
    <value>必要なチャレンジの検証が正常に完了しなかった。 {0}</value>
  </data>
  <data name="CertifyManager_AutoBinding" xml:space="preserve">
    <value>自動で証明書バインディングの実行</value>
  </data>
  <data name="CertifyManager_RenewalOnHold" xml:space="preserve">
    <value>前の更新が失敗しました：{0}。 48時間以内に更新を試みます。</value>
  </data>
  <data name="CertifyManager_RegisterDomainIdentity" xml:space="preserve">
    <value>ドメイン識別子の登録</value>
  </data>
  <data name="CertifyManager_ReqestValidationFromLetsEncrypt" xml:space="preserve">
    <value>Let's Encrypt からの検証要求：{0}</value>
  </data>
  <data name="CertifyManager_SiteStopped" xml:space="preserve">
    <value>サイトの停止（または存在しない）、ドメインの検証が実行できないため、更新はスキップされます。</value>
  </data>
  <data name="CertifyManager_LetsEncryptServiceTimeout" xml:space="preserve">
    <value>Let's Encrypt  サービスは、許可された時間内に有効な証明書を発行しませんでした。 {0}</value>
  </data>
</root>